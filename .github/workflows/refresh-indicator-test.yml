# ****************************************************************************
# NOTES:
#
# In order for this to work, you must replace STAGING_ORGANISATION below
# with the name of your staging GitHub organisation, in line 53.
# You must also replace STAGING_SITE_REPOSITORY below with the name of your
# staging site repository.
#
# For example, if your staging organisation is "my-sdg-staging-org", and your
# staging site repository is "open-sdg-site-starter", then use:
#
# curl -X POST https://api.github.com/repos/my-sdg-staging-org/open-sdg-site-starter/dispatches
#
# ****************************************************************************

name: Deploy to staging

on:
  push:
    branches:
      - develop

jobs:
  data-update:
    name: Data update
    runs-on: windows-2019
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with: 
          r-version: [4.1.3]
      
      # TODO: Cache R packages
      # - name: Cache R packages
      #   id: cache
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ env.R_LIBS_USER }}
      #     key: ${{ runner.os }}-shinydoc
      #     restore-keys: |
      #       ${{ runner.os }}-
            
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          install.packages(c("dplyr", "readr", "cansim"))
        shell: Rscript {0}
  
  
      - name: Updating data and cleaning 
        run: |
          source('scripts/indicator_9-5-1.R')
        shell: Rscript {0}


